class Solution
{
    public:
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    vector<int> topView(Node *root)
    {
        vector<int>ans;
        
        if(root==NULL){
            return ans;
        }
        map<int,int>m;
        queue<pair<Node*,int>>q;
        q.push(make_pair(root,0));
        while(!q.empty()){
            pair<Node *,int>p=q.front();
            Node* temp=p.first;
             q.pop();
            int hd=p.second;
            
            //to make entry in map
            if(m.find(hd)==m.end()){
                m[hd]=temp->data;
            }
            
            if(temp->left)
                q.push(make_pair(temp->left,hd-1));
            
             if(temp->right)
                q.push(make_pair(temp->right,hd+1));
            
            
        }
        for(auto i: m){
            ans.push_back(i.second);
        }
        return ans;
    }

};
